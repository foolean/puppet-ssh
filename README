ssh

The ssh module is a collection of classes and defines that facilitate
the configuration of the ssh client and multiple listening ssh daemons.

Example
-------

    node my_node {
        class { 'ssh::client': }
        ssh::server { 'default': }
        ssh::server { 'special': port => 2222 }
    }

Packaging
---------

Creating the package (tarball) that can be installed using puppet's module
function is simple.  Run the following command while in the top of the module
directory (e.g. /usr/src/puppet-ssh).

    puppet module build .

The resulting tarball will be named foolean-ssh-$VER.tar.gz and can be found
in the "pkg" directory within the source tree.

Installation and Upgrade
------------------------

When we're installing from a tarball the installation and upgrade process
is the same.  You'll need to set --modulepath if f you're installing the
module in a path other than the location defined in puppet.conf.

    MODULEPATH=/var/lib/puppet/modules
    puppet module install         \
        --force                   \
        --ignore-dependencies     \
        --module-path $MODULEPATH \
        $PATHTO/foolean-ssh-$VER.tar.gz

Managing Server Host Keys
-------------------------

Most modern ssh packages will create the server's host keys if they don't
already exist.  This module will also create the server's host keys if they
don't exist.  In some situations it is adventageous for a server to retain
it's server keys upon complete system rebuild.  Doing so prevents clients from
having to deal with the key mismatch errors that would happen otherwise.  This
module will look in several locations for copies of the key files before
creating keys.  

    The paths it will look in are:
    ${settings::vardir}/sites/${site_name}/${::fqdn}/etc/ssh/${key_file}
    ${settings::vardir}/private/${::fqdn}/etc/ssh/${key_file}
    ${settings::vardir}/hosts/${::fqdn}/etc/ssh/${key_file}
    ${settings::vardir}/nodefile/${::fqdn}/etc/ssh/${key_file}
    ${settings::vardir}/dist/${::fqdn}/etc/ssh/${key_file}

So far there doesn't seem to be a way to pass an array to puppet's file()
function so these are hard-coded lists for each of the RSA and DSA keys.
Passing the content of the keys as a parameter was also considered but
it was decided that doing so would make the node definition too difficult to
read.  This concept will be revisited in the future when it is made Heira
aware.

Limitations
-----------

[ ssh_known_hosts ]

Puppet's sshkey resource works well for managing the ssh_known_hosts file
however it is an "all or nothing" solution.  Currently there is no way to
use both a template and the sshkey resource.   Attempts to utilize both
will result in the sshkey resource randomly destroying the templated file
due to Puppet's natural ordering mechanisms.  All attempts to force order
did not work.  As a result the decision was made to make the ssh_known_hosts
file a template only and leave the use of sshkey up to the administrator to
create the necessary local classes.

License
-------

Copyright (c) 2013 Foolean.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Contact
-------
bennett@foolean.org
